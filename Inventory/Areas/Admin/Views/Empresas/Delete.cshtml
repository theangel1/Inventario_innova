@model Inventory.Models.Empresa

@{
    ViewData["Title"] = "Eliminar Empresa";
}
<div class="container-fluid">
    <h3 class="text-danger">Eliminar Empresa</h3>
    <hr class="bg-warning" />

    <br />

    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Nombre)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Nombre)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rut)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rut)
        </dd>
    </dl>

    <br />

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <div class="form-group text-center">
            <input type="submit" value="Eliminar" class="btn btn-danger col-lg-2 col-sm-3" />
            <a asp-action="Index" class="btn btn-dark col-lg-2 col-sm-3">Volver a la Lista</a>
        </div>
    </form>
</div>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @if (!string.IsNullOrEmpty(ViewBag.serverError))
    {
        <script type="text/javascript">
          Swal.fire("¡Información!", '@ViewBag.serverError', "error");
        </script>
    }

}